// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  emailVerified DateTime?
  username      String        @unique
  photo         String?
  firstName     String?
  lastName      String?
  planId        Int?          @default(1)
  creditBalance Int?          @default(10)
  password      String?
  accounts      Account[]
  Image         Image[]
  Transaction   Transaction[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Image {
  id                 String   @id @default(cuid())
  title              String
  transformationType String
  publicId           String
  secureURL          String
  width              Int?
  height             Int?
  config             Json?
  transformationURL  String?
  aspectRatio        String?
  color              String?
  prompt             String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  authorId           String   @map("author") // optional relationship field

  // Define the relationship with the User model
  author User @relation(fields: [authorId], references: [id])

  @@map("images") // map to the "images" table
}

model Transaction {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  stripeId  String
  amount    Int
  plan      String?
  creditts  Int?
  buyer     User     @relation(fields: [buyerId], references: [id])
  buyerId    String
}
